<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

  <mapper namespace="petsfinder.shop.ShopDAOImpl">
  <!-- 상품리스트 페이징에 쓰일 카운트 -->
  	<select id="productGetTotalCount" parameterType="petsfinder.shop.ParameterDTO" 
  	resultType="int">
  		select count(*) from product
  		<choose>
		    <when test="cate != null and cate == 1">
		    	where product_category='ess'
		    </when>
		    <when test="cate != null and cate == 2">
		    	where product_category='mdc'
		    </when>
		    <when test="cate != null and cate == 3">
		    	where product_category='gds'
		    </when>
		    <otherwise>
		        
		    </otherwise>
		</choose>
  	</select>
  	<!-- 상품의 리스트 -->
  	<select id="productList" parameterType="petsfinder.shop.ParameterDTO"
  	resultType="petsfinder.shop.ProductDTO" >
  		select 
	          p.*, photos, NVL(b.cnt,0) review_count 
	      from 
	          product p
	      left OUTER JOIN 
	          (select 
	              product_idx, LISTAGG(PDT_IMAGE_FILE, ', ')
	              WITHIN GROUP (ORDER BY PDT_IMAGE_IDX desc) as photos
	          from 
	              product_image 
	          GROUP BY product_idx
	         ) a ON p.product_idx = a.product_idx 
	         LEFT OUTER JOIN (
	             SELECT
	                 product_idx, count(*) cnt
	             FROM review_board
	             GROUP BY product_idx
	         ) b ON p.product_idx = b.product_idx

  		<choose>
		    <when test="cate != null and cate == 1">
		    	where product_category='ess'
		    </when>
		    <when test="cate != null and cate == 2">
		    	where product_category='mdc'
		    </when>
		    <when test="cate != null and cate == 3">
		    	where product_category='gds'
		    </when>
		    <otherwise>
		        
		    </otherwise>
		</choose>
		
  		<choose>
		    <when test="sort != null and sort == 2">
		    	<choose>
				    <when test="sortm != null and sortm == 0">
				    	order by p.product_idx desc
				    </when>
				    <when test="sortm != null and sortm == 1">
				    	order by p.product_price asc 
				    </when>
				    <when test="sortm != null and sortm == 2">
				    	order by p.product_price desc 
				    </when>
				    <otherwise>
				  		order by p.product_idx desc
				    </otherwise>
				</choose>
		    </when>
		    <when test="sort != null and sort == 3">
		    	<choose>
				    <when test="sortm != null and sortm == 0">
				    	order by p.product_idx desc
				    </when>
				    <when test="sortm != null and sortm == 1">
				    	order by p.product_regdate asc 
				    </when>
				    <when test="sortm != null and sortm == 2">
				    	order by p.product_regdate desc 
				    </when>
				    <otherwise>
				  		order by p.product_idx desc
				    </otherwise>
				</choose>
		    </when>
		    <otherwise>
		  		order by p.product_idx desc
		    </otherwise>
		</choose>
		
  	</select>
  	
  	<!-- 상품 상세보기 -->
  	<select id="shopview" resultType="petsfinder.shop.ProductDTO" parameterType="int">
  		select * from product p 
  		inner join product_image pi  
  		on p.product_idx=pi.product_idx 
  		where p.product_idx = #{param1}
  	</select>
  	
  	<!-- 상품 1개 정보 가져오기 -->
  	<select id="productInfo" resultType="petsfinder.shop.ProductDTO" parameterType="int">
  		select
		    p.*,Tb.photos 
		from 
		    product p, (select
		                    product_idx, LISTAGG(pdt_image_file,'|') WITHIN GROUP(ORDER BY pdt_image_file) photos 
		                from 
		                    product_image 
		                group by 
		                    product_idx) Tb 
		where 
		    p.product_idx=Tb.product_idx 
		and 
		    p.product_idx = #{param1}
  	</select>
  	
  	<!-- 장바구니 담기 -->
  	<insert id="insertCart" parameterType="petsfinder.shop.CartDTO">
		INSERT INTO cart( cart_idx,	product_idx, member_idx, product_quanity )
							VALUES(	SEQ_cart_idx.nextval, #{product_idx}, #{member_idx}, #{product_quanity})
	</insert>
	
	<!-- 결제에 필요한 사용자 정보 -->
	<select id="payUserInfo" resultType="petsfinder.shop.MemberSDTO">
		select  
		    (select 
		        max(discount_rate) 
		    from 
		        sale 
		    where 
		        member_grade in (select 
		                            decode(count(*),1,'sit',0,'nor') 
		                        from 
		                            member
		                        where 
		                            member_type='sit' and member_idx=#{param1}) 
		        or member_grade in (select
		                                decode(count(*),1,'adp',0,'nor') 
		                            from
		                                member m, ADOPTION_list a 
		                            where 
		                                m.member_idx=a.member_idx
		                            and 
		                                m.member_idx=#{param1})) as sale , m.member_name, m.member_addr, m.member_email,m.member_phone 
		from 
		    member m 
		where 
		    member_idx=#{param1}
	
	</select>
	
	<select id="cartList" resultType="petsfinder.shop.BuyOrCartDTO">
		select 
		    c.cart_idx, c.product_quanity, p.product_idx, p.product_name,
		    p.product_price,decode(p.product_category,'ess','필수 용품','mdc','의약품','gds','굿즈') product_cate,
		    p.product_stock, p.photos from cart c,(select
		    p.*,Tb.photos 
		from 
		    product p, (select
		                    product_idx, LISTAGG(pdt_image_file,'|') WITHIN GROUP(ORDER BY pdt_image_file) photos 
		                from 
		                    product_image 
		                group by 
		                    product_idx) Tb 
		where 
		    p.product_idx=Tb.product_idx) p where c.product_idx=p.product_idx and c.member_idx=#{param1}
	</select>
	
	<delete id="cartDelete" parameterType="java.util.ArrayList">
		delete from cart where cart_idx in
		<foreach collection="array" item="item" index="index"
  			open="(" close=")" separator=",">
  			#{item}
  		</foreach>
	</delete>
  	
  </mapper>
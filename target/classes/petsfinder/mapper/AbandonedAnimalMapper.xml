<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
   <mapper namespace="petsfinder.abandonedanimal.AbandonedAnimalDAOImpl">
   
   <!-- 유기동물 상세보기 -->
   <select id="abandonedAnimalView" resultType="petsfinder.abandonedanimal.AbandonedAnimalDTO"
  		parameterType="petsfinder.abandonedanimal.AbandonedAnimalDTO">
  		SELECT * from abandonedAnimal where abani_idx=#{abani_idx}
   </select>
  	
  	<!-- 유기동물 전체 수 가져오기 -->
  	<select id="abAniGetTotalCount" resultType="int">
  		SELECT COUNT(*) from abandonedAnimal
  	</select>
  	<!-- 유기동물 리스트 가져오기 -->
  	<select id="listPage" resultType="petsfinder.abandonedanimal.AbandonedAnimalDTO">
  		SELECT * FROM (
  			SELECT Tb.*, rownum rNum FROM (
  				SELECT * FROM abandonedAnimal 
  				ORDER BY abani_idx DESC 
  			) Tb
  		)
  		WHERE rNum<![CDATA[>=]]>#{param1} AND rNum<![CDATA[<=]]>#{param2}
  	</select>
  	
  	<!-- 유기동물 신고 저장 -->
  	<insert id="notifyForm" parameterType="petsfinder.abandonedanimal.ReportDTO">
		INSERT INTO REPORT_ABANDONED_ANIMALS( dclrAbnd_idx,	dclrAbnd_loc, dclrAbnd_title, dclrAbnd_content
											, dclrAbnd_photo, dclrAbnd_regdate,	dclrAbnd_stts, member_idx )
									VALUES(	SEQ_REPORT_idx.nextval, #{dclrAbnd_loc}, #{dclrAbnd_title}, #{dclrAbnd_content}
											, #{dclrAbnd_photo}, sysdate, 'reg', #{member_idx})
	</insert>
  	<!-- 유기동물 후기 리스트 가져오기 -->
  	<select id="abaAniReview" resultType="petsfinder.review.ReviewBoardDTO">
  		select a.*,  NVL(b.countlike, 0) as countlike
		from (select r.*, m.member_name member_namer
	        from review_board r, member m 
	        where r.member_idx=m.member_idx and abani_idx=#{param1}
	        order by review_idx desc) a 
		left OUTER JOIN (select  review_idx, count(review_idx) countlike 
                   	 	from review_like  where reviewLike_stt=1 group by review_idx) b 
		on a.review_idx=b.review_idx
  	</select>
  	<!-- 그 입양동물 상세보기에서 쓰인 후기들의 댓글을 모두 가져오기 -->
  	<select id="reviewComment" resultType="petsfinder.review.ReviewCommentDTO">
  		select 
		    a.*, b.member_name member_namec, b.member_photo member_photo
		from (select * 
		    from review_Comment 
		    where review_idx 
		    in(select review_idx 
		        from review_board 
		        where abani_idx=#{param1})) a, member b 
		where a.member_idx=b.member_idx
  	</select>
  	
  	<!-- 후기의 댓글 저장 -->
  	<insert id="commentInsert" parameterType="petsfinder.review.ReviewCommentDTO">
		INSERT INTO review_Comment( reviewcomm_idx,	reviewcomm_content, reviewcomm_regdate, review_idx,member_idx)
									VALUES(	SEQ_reviewcomm_idx.nextval, #{reviewcomm_content}, sysdate, #{review_idx}
										, #{member_idx})
	</insert>
	
	
	<!-- 좋아요 유무확인 -->
	<select id="likeStatus" resultType="petsfinder.review.ReviewLikeDTO"
	parameterType="petsfinder.review.ReviewLikeDTO">
		select * from review_like where review_idx = #{review_idx} and member_idx = #{member_idx}
	</select>
	
	<!-- 좋아요 저장 -->
	<insert id="insertLike" parameterType="petsfinder.review.ReviewLikeDTO">
		INSERT INTO review_like(reviewlike_idx, reviewlike_stt, review_idx, member_idx)
                           VALUES(SEQ_reviewlike_idx.nextval,1, #{review_idx}, #{member_idx})
	</insert>
	
	<!-- 좋아요 0->1 -->
	<update id="likeZeroToOne" parameterType="petsfinder.review.ReviewLikeDTO">
		update review_like set reviewlike_stt = 1 where review_idx = #{review_idx} and member_idx = #{member_idx}
	</update>
	
	<!-- 좋아요 1->0 -->
	<update id="likeOntToZero" parameterType="petsfinder.review.ReviewLikeDTO">
		update review_like set reviewlike_stt = 0 where review_idx = #{review_idx} and member_idx = #{member_idx}
	</update>
	
	<!-- 사용자가 좋아요한 후기 목록 -->
	<select id="likeList" resultType="petsfinder.review.ReviewLikeDTO">
		select l.*
		from review_board b , review_like l 
		where b.review_idx=l.review_idx and l.member_idx=#{param1} and l.reviewlike_stt=1
	</select>
	
	<!-- 입양 신청 저장 -->
  	<insert id="AdoptApplicationForm" parameterType="petsfinder.abandonedanimal.AdoptionAppDTO">
		INSERT INTO ADOPTION_APPLICATION( ADPAPL_idx, ADPAPL_name, ADPAPL_gender, ADPAPL_birth
											, ADPAPL_tel, ADPAPL_addr,	ADPAPL_job, ADPAPL_exp
											, ADPAPL_havepet, adpapl_fNum, abani_idx, member_idx )
									VALUES(	SEQ_ADPAPL_idx.nextval, #{ADPAPL_name}, #{ADPAPL_gender}, #{ADPAPL_birth}
											, #{ADPAPL_tel}, #{ADPAPL_addr}, #{ADPAPL_job}, #{ADPAPL_exp}
											, #{ADPAPL_havepet}, #{adpapl_fNum}, #{abani_idx}, #{member_idx} )
	</insert>
	
	
  	
  	
  	
   
   </mapper>